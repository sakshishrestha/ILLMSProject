@page "/register"
@using ILLMS.models;
@using ILLMS.service
@inject DBService dbService
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<section class="login">
    <div class="container">
        <div class="login-form">
            <form class="form" @onsubmit="RegisterUser">
                <!-- Name input -->
                <div class="card" style="width: 27rem; text-align:center;">
                    <h5>Register</h5>
                    <div data-mdb-input-init class="form-outline mb-3">
                        <input type="text" @bind="name" class="form-control" placeholder="Enter your Name" />
                    </div>

                    <!-- Email input -->
                    <div data-mdb-input-init class="form-outline mb-3">
                        <input type="email" @bind="email" class="form-control" placeholder="Email your Email" />
                    </div>

                    <!-- Password input -->
                    <div data-mdb-input-init class="form-outline mb-3">
                        <input type="password" @bind="password" class="form-control" placeholder="Enter Password" />
                    </div>
                    <div data-mdb-input-init class="form-outline mb-3">
                        <input type="password" @bind="confirmPassword" class="form-control" placeholder="Re-enter Password" />
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary btn-block mb-4">Register</button>

                    <!-- Error message -->
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                    <div class="alert alert-danger" role="alert">@errorMessage</div>
                    }
                </div>
            </form>
        </div>
    </div>
</section>

@code {
private string name;
private string email;
private string password;
private string confirmPassword;
private string errorMessage;

private async Task RegisterUser()
{
// Validate input
if (string.IsNullOrEmpty(name) || string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
{
errorMessage = "Please fill in all fields.";
return;
}

if (password != confirmPassword)
{
errorMessage = "Passwords do not match.";
return;
}

// Split the name into first name and last name
string[] names = name.Split(' ');
string firstName = names.Length > 0 ? names[0] : string.Empty;
string lastName = names.Length > 1 ? names[1] : string.Empty;

// Add user to database
var newUser = new User { firstName = firstName, lastName = lastName, email = email, password = password };
dbService.RegisterUser(newUser);

// Redirect to login page or any other page
Navigation.NavigateTo("/login");
}
}
